{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { initStore, initialCards, addItem } from '../store';\nimport withRedux from 'next-redux-wrapper';\nimport \"./index.css\";\nimport Card from \"./Card\";\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsx(\"header\", {\n          className: \"App-header\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/static/logo.png\",\n            className: \"static-logo\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"Grid\",\n          children: this.props.cards.map(function (card) {\n            return /*#__PURE__*/_jsx(Card, {}, card.id);\n          })\n        })]\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // how to initialize state in nextjs\n    // you can not use getInitialProps and getStaticProps together\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store;\n                console.log(\"getInitialProps\");\n                store.dispatch(initialCards());\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component); // export async function getStaticProps() {\n//     // all these happens in the server\n//     // Perform network request\n//     const res = await fetch('https://api.github.com/repos/vercel/next.js')\n//     const json = await res.json()\n//     // this is printed on the servr's console\n//     // console.log(json)\n//     return { props: { cards: data } }\n// }\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    initialCards: bindActionCreators(initialCards, dispatch),\n    addItem: bindActionCreators(addItem, dispatch)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cards: state.cards\n  };\n};\n\nexport default withRedux(initStore, mapStateToProps, mapDispatchToProps)(Index);","map":null,"metadata":{},"sourceType":"module"}